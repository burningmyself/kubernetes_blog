{
  "filename": "often.md",
  "__html": "<h1>Linux 常用命令</h1>\n<h2>日常操作命令</h2>\n<h3>查看当前所在的工作目录的全路径 pwd</h3>\n<pre><code class=\"language-shell\">[root@VM_0_14_centos ~]# pwd\n/root\n</code></pre>\n<h3>查看当前系统的时间 date</h3>\n<pre><code class=\"language-shell\">[root@VM_0_14_centos ~]# date +%Y-%m-%d\n2018-11-10\n[root@VM_0_14_centos ~]# date +%Y-%m-%d --date=\"-1 day\" #加减也可以 month | year\n2018-11-09\n[root@VM_0_14_centos ~]# date -s \"2018-10-10 15:38:46\" ## 修改时间\nSat Nov 10 15:38:46 CST 2018\n</code></pre>\n<h3>查看有谁在线（哪些人登陆到了服务器）</h3>\n<pre><code class=\"language-shell\">[root@VM_0_14_centos ~]# who\nroot     pts/0        2018-11-10 15:19 (125.84.94.225)\n[root@VM_0_14_centos ~]# last\nroot     pts/0        125.84.94.225    Sat Nov 10 15:19   still logged in   \nroot     pts/0        125.84.89.248    Mon Nov  5 08:32 - 08:32  (00:00)    \nroot     pts/0        125.84.92.12     Mon Oct 22 11:47 - 15:18  (03:30)    \nroot     pts/0        125.84.94.170    Fri Oct 19 15:00 - 21:07  (06:06)    \nroot     pts/0        125.84.95.234    Mon Oct 15 10:16 - 13:55  (03:39)    \nroot     pts/0        125.84.95.234    Sat Oct 13 17:11 - 18:32  (01:20)    \nroot     pts/1        125.84.94.251    Thu Oct 11 12:01 - 17:09  (05:08)    \nroot     pts/0        125.84.92.121    Thu Oct 11 09:02 - 12:09  (03:07)    \nroot     pts/0        125.84.94.34     Wed Oct 10 17:35 - 18:14  (00:39) \n</code></pre>\n<h3>关机/重启</h3>\n<p>关机（必须用root用户）</p>\n<pre><code class=\"language-shell\">shutdown -h now  ## 立刻关机\nshutdown -h +10  ##  10分钟以后关机\nshutdown -h 12:00:00  ##12点整的时候关机\nhalt   #  等于立刻关机\n</code></pre>\n<p>重启</p>\n<pre><code class=\"language-shell\">shutdown -r now\nreboot   # 等于立刻重启\n</code></pre>\n<h3>清屏</h3>\n<pre><code class=\"language-shell\">clear    ## 或者用快捷键  ctrl + l\n</code></pre>\n<h3>退出当前进程</h3>\n<pre><code class=\"language-shell\">ctrl+c   ##有些程序也可以用q键退出\n</code></pre>\n<h3>挂起当前进程</h3>\n<pre><code class=\"language-shell\">ctrl+z   ## 进程会挂起到后台\nbg jobid  ## 让进程在后台继续执行\nfg jobid   ## 让进程回到前台\n</code></pre>\n<h3>echo</h3>\n<pre><code class=\"language-shell\">[root@VM_0_14_centos ~]# str='hello wrold'\n[root@VM_0_14_centos ~]# echo str\nstr\n[root@VM_0_14_centos ~]# echo $str\nhello wrold\n</code></pre>\n<h2>目录操作</h2>\n<h3>查看目录信息</h3>\n<pre><code class=\"language-shell\">ls /   ## 查看根目录下的子节点（文件夹和文件）信息\nls -al ##  -a是显示隐藏文件   -l是以更详细的列表形式显示\nls -l  ##有一个别名： ll    可以直接使用ll  &lt;是两个L&gt;\n</code></pre>\n<h3>切换工作目录</h3>\n<pre><code class=\"language-shell\">cd  /home/hadoop    ## 切换到用户主目录\ncd ~     ## 切换到用户主目录\ncd -     ## 回退到上次所在的目录\ncd       ## 什么路径都不带，则回到用户的主目录\n</code></pre>\n<h3>创建文件夹</h3>\n<pre><code class=\"language-shell\">mkdir aaa     ## 这是相对路径的写法 \nmkdir  /data    ## 这是绝对路径的写法 \nmkdir -p  aaa/bbb/ccc   ## 级联创建目录\n</code></pre>\n<h3>删除文件夹</h3>\n<pre><code class=\"language-shell\">rmdir  aaa   ## 可以删除空目录\nrm  -r  aaa   ## 可以把aaa整个文件夹及其中的所有子节点全部删除\nrm  -rf  aaa   ## 强制删除aaa\n</code></pre>\n<h3>修改文件夹名称</h3>\n<pre><code class=\"language-shell\">mv  aaa  boy\nmv  #本质上是移动\nmv  install.log  aaa/  #将当前目录下的install.log 移动到aaa文件夹中去\n\nrename #可以用来批量更改文件名\n[root@VM_0_14_centos aaa]# ll\ntotal 0\n-rw-r--r--. 1 root root 0 Jul 28 17:33 1.txt\n-rw-r--r--. 1 root root 0 Jul 28 17:33 2.txt\n-rw-r--r--. 1 root root 0 Jul 28 17:33 3.txt\n[root@VM_0_14_centos aaa]# rename .txt .txt.bak *\n[root@VM_0_14_centos aaa]# ll\ntotal 0\n-rw-r--r--. 1 root root 0 Jul 28 17:33 1.txt.bak\n-rw-r--r--. 1 root root 0 Jul 28 17:33 2.txt.bak\n-rw-r--r--. 1 root root 0 Jul 28 17:33 3.txt.bak\n</code></pre>\n<h2>文件操作</h2>\n<h3>创建文件</h3>\n<pre><code class=\"language-shell\">touch  somefile.1     ## 创建一个空文件\necho \"hi,boy\" &gt; somefile.2    ## 利用重定向“&gt;”的功能，将一条指令的输出结果写入到一个文件中，会覆盖原文件内容，如果指定的文件不存在，则会创建出来\necho \"hi baby\" &gt;&gt; somefile.2   ## 将一条指令的输出结果追加到一个文件中，不会覆盖原文件内容\n</code></pre>\n<h3>vi文本编辑器</h3>\n<p>最基本用法\nvi  somefile.4</p>\n<ol>\n<li>首先会进入“一般模式”，此模式只接受各种快捷键，不能编辑文件内容</li>\n<li>按i键，就会从一般模式进入编辑模式，此模式下，敲入的都是文件内容</li>\n<li>编辑完成之后，按Esc键退出编辑模式，回到一般模式；</li>\n<li>再按：，进入“底行命令模式”，输入wq命令，回车即可</li>\n</ol>\n<p>常用快捷键\n一些有用的快捷键（在一般模式下使用）：</p>\n<ul>\n<li>a   在光标后一位开始插入</li>\n<li>A   在该行的最后插入</li>\n<li>I   在该行的最前面插入</li>\n<li>gg   直接跳到文件的首行</li>\n<li>G    直接跳到文件的末行</li>\n<li>dd    删除一行</li>\n<li>3dd   删除3行</li>\n<li>yy    复制一行</li>\n<li>3yy   复制3行</li>\n<li>p     粘贴</li>\n<li>u     undo</li>\n<li>v        进入字符选择模式，选择完成后，按y复制，按p粘贴</li>\n<li>ctrl+v   进入块选择模式，选择完成后，按y复制，按p粘贴</li>\n<li>shift+v  进入行选择模式，选择完成后，按y复制，按p粘贴</li>\n</ul>\n<p>查找并替换</p>\n<ol>\n<li>显示行号:set nu</li>\n<li>隐藏行号:set nonu</li>\n<li>查找关键字:/you       ## 效果：查找文件中出现的you，并定位到第一个找到的地方，按n可以定位到下一个匹配位置（按N定位到上一个）</li>\n<li>替换操作:s/sad/bbb   ## 查找光标所在行的第一个sad，替换为bbb.:%s/sad/bbb      ##查找文件中所有sad，替换为bbb</li>\n</ol>\n<h3>拷贝/删除/移动</h3>\n<pre><code class=\"language-shell\">cp  somefile.1   /home/hadoop/\nrm /home/hadoop/somefile.1\nrm -f /home/hadoop/somefile.1\nmv /home/hadoop/somefile.1 ../\n</code></pre>\n<h3>查看文件内容</h3>\n<pre><code class=\"language-shell\">cat    somefile      一次性将文件内容全部输出（控制台）\nmore   somefile      可以翻页查看, 下翻一页(空格)    上翻一页（b）   退出（q）\nless   somefile      可以翻页查看,下翻一页(空格)    上翻一页（b），上翻一行(↑)  下翻一行（↓）  可以搜索关键字（/keyword）\n跳到文件末尾： G\n跳到文件首行： gg\n退出less ：  q\n\ntail -10  install.log  查看文件尾部的10行\ntail +10  install.log  查看文件 10--&gt;末行\ntail -f install.log    小f跟踪文件的唯一inode号，就算文件改名后，还是跟踪原来这个inode表示的文件\ntail -F install.log    大F按照文件名来跟踪\n\nhead -10  install.log   查看文件头部的10\n</code></pre>\n<h3>打包压缩</h3>\n<ol>\n<li>gzip压缩:gzip a.txt</li>\n<li>解压:gunzip a.txt.gz 或者 gzip -d a.txt.gz</li>\n<li>bzip2压缩:bzip2 a</li>\n<li>解压:bunzip2 a.bz2 或者 bzip2 -d a.bz2</li>\n<li>打包：将指定文件或文件夹-&gt; tar -cvf bak.tar  ./aaa\n将/etc/password追加文件到bak.tar中(r)-&gt; tar -rvf bak.tar /etc/password</li>\n<li>解压:tar -xvf bak.tar</li>\n<li>打包并压缩:tar -zcvf a.tar.gz  aaa/</li>\n<li>解包并解压缩(重要的事情说三遍!!!):tar  -zxvf  a.tar.gz\n解压到/usr/下-&gt;tar  -zxvf  a.tar.gz  -C  /usr</li>\n<li>查看压缩包内容:tar -ztvf a.tar.gz zip/unzip</li>\n<li>打包并压缩成bz2:tar -jcvf a.tar.bz2</li>\n<li>解压bz2:tar -jxvf a.tar.bz2</li>\n</ol>\n<h2>查找命令</h2>\n<h3>常用查找命令的使用</h3>\n<ol>\n<li>查找可执行的命令所在的路径：which ls</li>\n<li>查找可执行的命令和帮助的位置：whereis ls</li>\n<li>从某个文件夹开始查找文件：find / -name &quot;hadooop*&quot; 或者find / -name &quot;hadooop*&quot; -ls</li>\n<li>查找并删除：find / -name &quot;hadooop*&quot; -ok rm {} ;find / -name &quot;hadooop*&quot; -exec rm {} ;</li>\n<li>查找用户为hadoop的文件:find  /usr  -user  hadoop  -ls</li>\n<li>查找用户为hadoop的文件夹:find /home -user hadoop -type d -ls</li>\n<li>查找权限为777的文件:find / -perm -777 -type d -ls</li>\n<li>显示命令历史:history</li>\n</ol>\n<h3>grep命令</h3>\n<ol>\n<li>基本使用 查询包含hadoop的行 grep hadoop /etc/password 查询包含aaa的行   grep aaa  ./*.txt</li>\n<li>cut截取以:分割保留第七段: grep hadoop /etc/passwd | cut -d: -f7</li>\n<li>查询不包含hadoop的行:grep -v hadoop /etc/passwd</li>\n<li>正则表达包含hadoop:grep 'hadoop' /etc/passwd</li>\n<li>正则表达(点代表任意一个字符):grep 'h.*p' /etc/passwd</li>\n<li>正则表达以hadoop开头:grep '^hadoop' /etc/passwd</li>\n<li>正则表达以hadoop结尾:grep 'hadoop$' /etc/passwd</li>\n</ol>\n<pre><code>规则：\n.  : 任意一个字符\na* : 任意多个a(零个或多个a)\na? : 零个或一个a\na+ : 一个或多个a\n.* : 任意多个任意字符\n\\. : 转义.\no\\{2\\} : o重复两次\n</code></pre>\n<ol start=\"8\">\n<li>查找不是以#开头的行: grep -v '^#' a.txt | grep -v '^$'</li>\n<li>以h或r开头的:grep '<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>' /etc/passwd</li>\n<li>不是以h和r开头的:grep '<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>' /etc/passwd</li>\n<li>不是以h到r开头的:grep '<sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup>' /etc/passwd</li>\n</ol>\n<h2>文件权限的操作</h2>\n<h3>linux文件权限的描述格式解读</h3>\n<pre><code>drwxr-xr-x      （也可以用二进制表示  111 101 101  --&gt;  755）\n\nd：标识节点类型（d：文件夹   -：文件  l:链接）\nr：可读   w：可写    x：可执行 \n第一组rwx：  ## 表示这个文件的拥有者对它的权限：可读可写可执行\n第二组r-x：  ## 表示这个文件的所属组用户对它的权限：可读，不可写，可执行\n第三组r-x：  ## 表示这个文件的其他用户（相对于上面两类用户）对它的权限：可读，不可写，可\n</code></pre>\n<h3>修改文件权限</h3>\n<pre><code class=\"language-shell\">chmod g-rw haha.dat\t\t ## 表示将haha.dat对所属组的rw权限取消\nchmod o-rw haha.dat\t\t ## 表示将haha.dat对其他人的rw权限取消\nchmod u+x haha.dat\t\t ## 表示将haha.dat对所属用户的权限增加x\nchmod a-x haha.dat       ## 表示将haha.dat对所用户取消x权限\nchmod 664 haha.dat       ## 也可以用数字的方式来修改权限 就会修改成   rw-rw-r--\nchmod -R 770 aaa/        ## 如果要将一个文件夹的所有内容权限统一修改，则可以-R参数\n</code></pre>\n<h3>修改文件所有权</h3>\n<p>&lt;只有root权限能执行&gt;</p>\n<pre><code class=\"language-shell\">chown angela  aaa\t\t## 改变所属用户\nchown :angela  aaa\t\t## 改变所属组\nchown angela:angela aaa/\t## 同时修改所属用户和所属组\n</code></pre>\n<h2>基本的用户管理</h2>\n<pre><code>添加一个用户：\nuseradd spark\npasswd  spark     根据提示设置密码；\n即可\n\n删除一个用户：\nuserdel -r spark     加一个-r就表示把用户及用户的主目录都删除\n</code></pre>\n<h3>添加用户</h3>\n<pre><code>添加一个tom用户，设置它属于users组，并添加注释信息\n分步完成：useradd tom\n          usermod -g users tom\n\t  usermod -c &quot;hr tom&quot; tom\n一步完成：useradd -g users -c &quot;hr tom&quot; tom\n\n设置tom用户的密码\npasswd tom\n</code></pre>\n<h3>修改用户</h3>\n<pre><code>修改tom用户的登陆名为tomcat\nusermod -l tomcat tom\n\n将tomcat添加到sys和root组中\nusermod -G sys,root tomcat\n\n查看tomcat的组信息\ngroups tomcat\n</code></pre>\n<h3>用户组操作</h3>\n<pre><code>添加一个叫america的组\ngroupadd america\n\n将jerry添加到america组中\nusermod -g america jerry\n\n将tomcat用户从root组和sys组删除\ngpasswd -d tomcat root\ngpasswd -d tomcat sys\n\n将america组名修改为am\ngroupmod -n am america\n</code></pre>\n<h3>为用户配置sudo权限</h3>\n<pre><code>用root编辑 vi /etc/sudoers\n在文件的如下位置，为hadoop添加一行即可\nroot    ALL=(ALL)       ALL     \nhadoop  ALL=(ALL)       ALL\n\n然后，hadoop用户就可以用sudo来执行系统级别的指令\n[root@localhost ~]$ sudo useradd xiaoming\n</code></pre>\n<h2>系统管理操作</h2>\n<h3>挂载外部存储设备</h3>\n<p>可以挂载光盘、硬盘、磁带、光盘镜像文件等</p>\n<ol>\n<li>\n<p>挂载光驱\nmkdir   /mnt/cdrom      创建一个目录，用来挂载\nmount -t iso9660 -o ro /dev/cdrom /mnt/cdrom/     将设备/dev/cdrom挂载到 挂载点 ：  /mnt/cdrom中</p>\n</li>\n<li>\n<p>挂载光盘镜像文件（.iso文件）\nmount -t iso9660 -o loop  /home/hadoop/Centos-7.0.DVD.iso /mnt/centos\n注：挂载的资源在重启后即失效，需要重新挂载。要想自动挂载，可以将挂载信息设置到/etc/fstab配置文件中，如下：\n/dev/cdrom/mnt/cdromiso9660 defaults        0 0</p>\n</li>\n<li>\n<p>卸载 umount\numount /mnt/cdrom</p>\n</li>\n<li>\n<p>存储空间查看 df -h</p>\n</li>\n</ol>\n<h3>统计文件或文件夹的大小</h3>\n<pre><code>du -sh  /mnt/cdrom/packages\ndf -h    查看磁盘的空间\n</code></pre>\n<h3>系统服务管理</h3>\n<pre><code class=\"language-shell\">service sshd status\nservice sshd stop \nservice sshd start\nservice sshd restart\n</code></pre>\n<h3>系统启动级别管理</h3>\n<pre><code class=\"language-shell\">vi  /etc/inittab\n\n       # Default runlevel. The runlevels used are:\n       #   0 - halt (Do NOT set initdefault to this)\n       #   1 - Single user mode\n       #   2 - Multiuser, without NFS (The same as 3, if you do not have networking)\n       #   3 - Full multiuser mode\n       #   4 - unused\n       #   5 - X11\n       #   6 - reboot (Do NOT set initdefault to this)\n       #\n       id:3:initdefault:\n       ## 通常将默认启动级别设置为：3\n</code></pre>\n<h3>进程管理</h3>\n<pre><code>top\nfree\nps -ef | grep ssh\nkill -9\n</code></pre>\n<h2>SSH免密登陆配置</h2>\n<h3>SSH工作机制</h3>\n<ol>\n<li>相关概念\nSSH 为 Secure Shell（安全外壳协议） 的缩写。\n很多ftp、pop和telnet在本质上都是不安全的，因为它们在网络上用明文传送口令和数据，别有用心的人非常容易就可以截获这些口令和数据。\n而SSH就是专为远程登录会话和其他网络服务提供安全性的协议。</li>\n</ol>\n<p>SSH是由客户端和服务端的软件组成的\n服务端是一个守护进程(sshd)，他在后台运行并响应来自客户端的连接请求。\n客户端包含ssh程序以及像scp（远程拷贝）、slogin（远程登陆）、sftp（安全文件传输）等其他的应用程序。</p>\n<ol start=\"2\">\n<li>认证机制\n从客户端来看，SSH提供两种级别的安全验证。</li>\n</ol>\n<p>第一种级别（基于口令的安全验证）\n只要你知道自己帐号和口令，就可以登录到远程主机。</p>\n<p>第二种级别（基于密钥的安全验证）\n需要依靠密匙，也就是你必须为自己创建一对密匙，并把公用密匙放在需要访问的服务器上。如果你要连接到SSH服务器上，\n客户端软件就会向服务器发出请求，请求用你的密匙进行安全验证。服务器收到请求之后，先在该服务器上你的主目录下寻找你的公用密匙，\n然后把它和你发送过来的公用密匙进行比较。如果两个密匙一致，服务器就用公用密匙加密“质询”（challenge）并把它发送给客户端软件。\n客户端软件收到“质询”之后就可以用你的私人密匙解密再把它发送给服务器。</p>\n<h3>密钥登陆方式配置</h3>\n<p>假如 A  要登陆  B\n在A上操作：</p>\n<ol>\n<li>首先生成密钥对:ssh-keygen   (提示时，直接回车即可)</li>\n<li>再将A自己的公钥拷贝并追加到B的授权列表文件authorized_keys中: ssh-copy-id   B</li>\n</ol>\n<h2>网络管理</h2>\n<h3>主机名配置</h3>\n<ol>\n<li>查看主机名:hostname</li>\n<li>修改主机名(重启后无效):hostname hadoop</li>\n<li>修改主机名(重启后永久生效) :vi /ect/sysconfig/network</li>\n</ol>\n<h3>IP地址配置</h3>\n<p>修改IP地址</p>\n<ol>\n<li>方式一：setup\n用root输入setup命令，进入交互式修改界面</li>\n<li>方式二：修改配置文件 一般使用这种方法\n(重启后永久生效)\nvi /etc/sysconfig/network-scripts/ifcfg-eth0</li>\n<li>方式三：ifconfig命令(重启后无效)\nifconfig eth0 192.168.12.22修改IP地址</li>\n</ol>\n<h3>网络服务管理</h3>\n<ol>\n<li>后台服务管理</li>\n</ol>\n<pre><code class=\"language-shell\">service network status    查看指定服务的状态\nservice network stop     停止指定服务\nservice network start     启动指定服务\nservice network restart   重启指定服务\nservice --status-all       查看系统中所有的后台服务\n</code></pre>\n<ol start=\"2\">\n<li>设置后台服务的自启配置</li>\n</ol>\n<pre><code class=\"language-shell\">chkconfig   查看所有服务器自启配置\nchkconfig iptables off   关掉指定服务的自动启动\nchkconfig iptables on   开启指定服务的自动启动\n</code></pre>\n<h3>防火墙</h3>\n<h4>iptables防火墙</h4>\n<ol>\n<li>基本操作</li>\n</ol>\n<ul>\n<li>查看防火墙状态</li>\n</ul>\n<pre><code>service iptables status  \n</code></pre>\n<ul>\n<li>停止防火墙</li>\n</ul>\n<pre><code>service iptables stop  \n</code></pre>\n<ul>\n<li>启动防火墙</li>\n</ul>\n<pre><code>service iptables start  \n</code></pre>\n<ul>\n<li>重启防火墙</li>\n</ul>\n<pre><code>service iptables restart  \n</code></pre>\n<ul>\n<li>永久关闭防火墙</li>\n</ul>\n<pre><code>chkconfig iptables off  \n</code></pre>\n<ul>\n<li>永久关闭后重启</li>\n</ul>\n<pre><code>chkconfig iptables on　　\n</code></pre>\n<ol start=\"2\">\n<li>开启80端口</li>\n</ol>\n<pre><code> vim /etc/sysconfig/iptables\n# 加入如下代码\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\n</code></pre>\n<h4>firewall防火墙</h4>\n<ol>\n<li>查看firewall服务状态</li>\n</ol>\n<pre><code>systemctl status firewalld\n</code></pre>\n<ol start=\"2\">\n<li>查看firewall的状态</li>\n</ol>\n<pre><code>firewall-cmd --state\n</code></pre>\n<ol start=\"3\">\n<li>开启、重启、关闭、firewalld.service服务</li>\n</ol>\n<pre><code># 开启\nservice firewalld start\n# 重启\nservice firewalld restart\n# 关闭\nservice firewalld stop\n</code></pre>\n<ol start=\"4\">\n<li>查看防火墙规则</li>\n</ol>\n<pre><code>firewall-cmd --list-all \n</code></pre>\n<ol start=\"5\">\n<li>查询、开放、关闭端口</li>\n</ol>\n<pre><code># 查询端口是否开放\nfirewall-cmd --query-port=8080/tcp\n# 开放80端口\nfirewall-cmd --permanent --add-port=80/tcp\n# 移除端口\nfirewall-cmd --permanent --remove-port=8080/tcp\n#重启防火墙(修改配置后要重启防火墙)\nfirewall-cmd --reload\n</code></pre>\n<p>参数解释:</p>\n<ul>\n<li>firwall-cmd：是Linux提供的操作firewall的一个工具；</li>\n<li>--permanent：表示设置为持久；</li>\n<li>--add-port：标识添加的端口；</li>\n</ul>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>hr <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>^hr <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn3\" class=\"footnote-item\"><p>^h-r <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
  "link": "\\zh-cn\\blog\\linux\\often.html",
  "meta": {}
}