{
  "filename": "mysql_pxc.md",
  "__html": "<h1>Docker 搭建pxc集群 + haproxy + keepalived 高可用</h1>\n<h2>docker基本指令：</h2>\n<ol>\n<li>更新软件包</li>\n</ol>\n<pre><code class=\"language-shell\">yum -y update\n</code></pre>\n<ol start=\"2\">\n<li>安装Docker虚拟机（centos 7）</li>\n</ol>\n<pre><code class=\"language-shell\">yum install -y docker\n</code></pre>\n<ol start=\"3\">\n<li>运行、重启、关闭Docker虚拟机</li>\n</ol>\n<pre><code class=\"language-shell\">service docker start\nservice docker stop\n</code></pre>\n<ol start=\"3\">\n<li>搜索镜像</li>\n</ol>\n<pre><code class=\"language-shell\"> docker search 镜像名称\n</code></pre>\n<ol start=\"4\">\n<li>下载镜像</li>\n</ol>\n<pre><code class=\"language-shell\">docker pull 镜像名称\n</code></pre>\n<ol start=\"5\">\n<li>查看镜像</li>\n</ol>\n<pre><code class=\"language-shell\">docker images\n</code></pre>\n<ol start=\"6\">\n<li>删除镜像</li>\n</ol>\n<pre><code class=\"language-shell\">docker rmi 镜像名称\n</code></pre>\n<ol start=\"7\">\n<li>运行容器</li>\n</ol>\n<pre><code class=\"language-shell\">docker run 启动参数  镜像名称\n</code></pre>\n<ol start=\"8\">\n<li>查看容器列表</li>\n</ol>\n<pre><code class=\"language-shell\">docker ps -a\n</code></pre>\n<h2>安装PXC集群</h2>\n<ol>\n<li>安装PXC镜像</li>\n</ol>\n<pre><code class=\"language-shell\">docker pull percona/percona-xtradb-cluster\n</code></pre>\n<ol start=\"2\">\n<li>查看本地镜像</li>\n</ol>\n<pre><code class=\"language-shell\">[root@VM_71_225_centos ~]# docker images\nREPOSITORY                                 TAG                 IMAGE ID            CREATED             SIZE\ndocker.io/hello-world                      latest              e38bc07ac18e        2 months ago        1.85 kB\ndocker.io/percona/percona-xtradb-cluster   latest              f1439de62087        3 months ago        413 MB\ndocker.io/java                             latest              d23bdf5b1b1b        17 months ago       643 MB\n</code></pre>\n<ol start=\"3\">\n<li><a href=\"http://docker.io/percona/percona-xtradb-cluster\">docker.io/percona/percona-xtradb-cluster</a> 太长，进行改名：</li>\n</ol>\n<pre><code class=\"language-shell\">[root@VM_71_225_centos ~]# docker tag percona/percona-xtradb-cluster pxc\n[root@VM_71_225_centos ~]# docker images\nREPOSITORY                                 TAG                 IMAGE ID            CREATED             SIZE\ndocker.io/percona/percona-xtradb-cluster   latest              f1439de62087        3 months ago        413 MB\npxc                                        latest              f1439de62087        3 months ago        413 MB\n</code></pre>\n<ol start=\"4\">\n<li>创建net1网段：</li>\n</ol>\n<pre><code class=\"language-shell\">docker network create --subnet=172.18.0.0/16 net1\n</code></pre>\n<ol start=\"5\">\n<li>创建五个数据卷（pxc无法直接存取宿组机的数据，所以创建五个docker数据卷）</li>\n</ol>\n<pre><code class=\"language-shell\">docker volume create v1\ndocker volume create v2\ndocker volume create v3\ndocker volume create v4\ndocker volume create v5\n</code></pre>\n<ol start=\"6\">\n<li>查看数据卷位置：</li>\n</ol>\n<pre><code class=\"language-shell\">[root@VM_71_225_centos code]# docker inspect v1\n[\n    {\n        \"Driver\": \"local\",\n        \"Labels\": {},\n        \"Mountpoint\": \"/var/lib/docker/volumes/v1/_data\",\n        \"Name\": \"v1\",\n        \"Options\": {},\n        \"Scope\": \"local\"\n    }\n]\n</code></pre>\n<ol start=\"7\">\n<li>创建5节点的PXC集群</li>\n</ol>\n<p>创建第1个MySQL节点</p>\n<pre><code class=\"language-shell\">docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=abc123456 -e CLUSTER_NAME=PXC -e XTRABACKUP_PASSWORD=abc123456 -v v1:/var/lib/mysql -v backup:/data --privileged --name=node1 --net=net1 --ip 172.18.0.2 pxc\n</code></pre>\n<p>等待2分钟后，再创建第二个节点，等待第一个节点实例化完毕后，才能开启第二个节点实例，不然会瞬间停止</p>\n<p>创建其他节点：</p>\n<p>创建第2个MySQL节点</p>\n<pre><code class=\"language-shell\">docker run -d -p 3307:3306 -e MYSQL_ROOT_PASSWORD=abc123456 -e CLUSTER_NAME=PXC -e XTRABACKUP_PASSWORD=abc123456 -e CLUSTER_JOIN=node1 -v v2:/var/lib/mysql -v backup:/data --privileged --name=node2 --net=net1 --ip 172.18.0.3 pxc\n</code></pre>\n<p>创建第3个MySQL节点</p>\n<pre><code class=\"language-shell\">docker run -d -p 3308:3306 -e MYSQL_ROOT_PASSWORD=abc123456 -e CLUSTER_NAME=PXC -e XTRABACKUP_PASSWORD=abc123456 -e CLUSTER_JOIN=node1 -v v3:/var/lib/mysql --privileged --name=node3 --net=net1 --ip 172.18.0.4 pxc\n</code></pre>\n<p>创建第4个MySQL节点</p>\n<pre><code class=\"language-shell\">docker run -d -p 3309:3306 -e MYSQL_ROOT_PASSWORD=abc123456 -e CLUSTER_NAME=PXC -e XTRABACKUP_PASSWORD=abc123456 -e CLUSTER_JOIN=node1 -v v4:/var/lib/mysql --privileged --name=node4 --net=net1 --ip 172.18.0.5 pxc\n</code></pre>\n<p>创建第5个MySQL节点</p>\n<pre><code class=\"language-shell\">docker run -d -p 3310:3306 -e MYSQL_ROOT_PASSWORD=abc123456 -e CLUSTER_NAME=PXC -e XTRABACKUP_PASSWORD=abc123456 -e CLUSTER_JOIN=node1 -v v5:/var/lib/mysql -v backup:/data --privileged --name=node5 --net=net1 --ip 172.18.0.6 pxc\n</code></pre>\n<h2>安装Haproxy进行高可用与负载均衡</h2>\n<ol>\n<li>在mysql集群数据库进行创建该用户haproxy</li>\n</ol>\n<pre><code class=\"language-shell\">create user 'haproxy'@'%'  identified by '';\n</code></pre>\n<ol start=\"2\">\n<li>拉取haproxy</li>\n</ol>\n<pre><code class=\"language-shell\">docker pull haproxy\n</code></pre>\n<ol start=\"3\">\n<li>编写Haproxy配置文件</li>\n</ol>\n<pre><code class=\"language-shell\">vi /usr/local/docker/haproxy/haproxy.cfg\n</code></pre>\n<p>配置文件如下：</p>\n<pre><code class=\"language-conf\">global\n    #工作目录\n    chroot /usr/local/etc/haproxy\n    #日志文件，使用rsyslog服务中local5日志设备（/var/log/local5），等级info\n    log 127.0.0.1 local5 info\n    #守护进程运行\n    daemon\n​\ndefaults\n    log global\n    mode    http\n    #日志格式\n    option  httplog\n    #日志中不记录负载均衡的心跳检测记录\n    option  dontlognull\n    #连接超时（毫秒）\n    timeout connect 5000\n    #客户端超时（毫秒）\n    timeout client  50000\n    #服务器超时（毫秒）\n    timeout server  50000\n​\n#监控界面   \nlisten  admin_stats\n    #监控界面的访问的IP和端口\n    bind  0.0.0.0:8888\n    #访问协议\n    mode        http\n    #URI相对地址\n    stats uri   /dbs\n    #统计报告格式\n    stats realm     Global\\ statistics\n    #登陆帐户信息\n    stats auth  admin:abc123456\n#数据库负载均衡\nlisten  proxy-mysql\n    #访问的IP和端口\n    bind  0.0.0.0:3306  \n    #网络协议\n    mode  tcp\n    #负载均衡算法（轮询算法）\n    #轮询算法：roundrobin\n    #权重算法：static-rr\n    #最少连接算法：leastconn\n    #请求源IP算法：source \n    balance  roundrobin\n    #日志格式\n    option  tcplog\n    #在MySQL中创建一个没有权限的haproxy用户，密码为空。Haproxy使用这个账户对MySQL数据库心跳检测\n    option  mysql-check user haproxy\n    server  MySQL_1 172.18.0.2:3306 check weight 1 maxconn 2000  \n    server  MySQL_2 172.18.0.3:3306 check weight 1 maxconn 2000  \n    server  MySQL_3 172.18.0.4:3306 check weight 1 maxconn 2000 \n    server  MySQL_4 172.18.0.5:3306 check weight 1 maxconn 2000\n    server  MySQL_5 172.18.0.6:3306 check weight 1 maxconn 2000\n    #使用keepalive检测死链\n    option  tcpka  \n</code></pre>\n<ol start=\"4\">\n<li>创建第1个Haproxy负载均衡服务器</li>\n</ol>\n<pre><code class=\"language-shell\">docker run -it -d -p 4001:8888 -p 4002:3306 -v docker run -it -d -p 4001:8888 -p 4002:3306 -v /usr/local/docker/haproxy:/usr/local/etc/haproxy --name h1 --privileged --net=net1 --ip 172.18.0.7 haproxy\n</code></pre>\n<ol start=\"5\">\n<li>进入h1容器，启动Haproxy</li>\n</ol>\n<pre><code class=\"language-shell\">docker exec -it h1 bash\nhaproxy -f /usr/local/etc/haproxy/haproxy.cfg\n</code></pre>\n<ol start=\"6\">\n<li>查看是否启动成功：\n访问http://ip:4001/dbs\n<img src=\"./../img/pxc1.png\" alt=\"pxc\"></li>\n</ol>\n<h2>安装keepalive实现双击热备</h2>\n",
  "link": "\\zh-cn\\blog\\sql\\mysql_pxc.html",
  "meta": {}
}