{
  "filename": "minio.md",
  "__html": "<h1>MinIO 搭建使用</h1>\n<h2>MinIO简介</h2>\n<p>MinIO 是一款基于Go语言的高性能对象存储服务，在Github上已有19K+Star。它采用了Apache License v2.0开源协议，非常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器/虚拟机镜像等。 本文将使用 MinIO 来自建一个对象存储服务用于存储图片。</p>\n<h2>安装及部署</h2>\n<blockquote>\n<p>MinIO的安装方式有很多，这里我们使用它在Docker环境下的安装方式。</p>\n</blockquote>\n<ul>\n<li>下载MinIO的Docker镜像：</li>\n</ul>\n<pre><code class=\"language-shell\">docker pull minio/minio\n</code></pre>\n<ul>\n<li>在Docker容器中运行MinIO，这里我们将MiniIO的数据和配置文件夹挂在到宿主机上：</li>\n</ul>\n<pre><code class=\"language-shell\">docker run -p 9000:9000 --name minio \\\n  --restart=always \\\n  -v /etc/localtime:/etc/localtime \\\n  -v /data/minio/data:/data \\\n  -v /data/minio/config:/root/.minio \\\n  -d minio/minio server /data\n</code></pre>\n<ul>\n<li>运行成功后，访问该地址来登录并使用MinIO，默认Access Key和Secret都是minioadmin：<a href=\"http://localhost:9000\">http://localhost:9000</a></li>\n</ul>\n<p><img src=\"./../img/minio1.png\" alt=\"minio\"></p>\n<h2>上传文件及使用</h2>\n<blockquote>\n<p>通过使用MinIO的网页端即可完成文件的上传下载功能，下面我们以图片上传下载为例来演示下该功能。</p>\n</blockquote>\n<ul>\n<li>在存储文件之前，我们需要新建一个存储桶：</li>\n</ul>\n<p><img src=\"./../img/minio2.png\" alt=\"minio\"></p>\n<ul>\n<li>存储桶创建完成后，通过上传按钮可以上传文件，这里我们上传一张图片：</li>\n</ul>\n<p><img src=\"./../img/minio3.png\" alt=\"minio\"></p>\n<ul>\n<li>图片上传完成后，我们可以通过拷贝链接按钮来获取图片访问路径，但是这只是个临时的访问路径：</li>\n</ul>\n<p><img src=\"./../img/minio4.png\" alt=\"minio\"></p>\n<ul>\n<li>要想获取一个永久的访问路径，需要修改存储桶的访问策略，我们可以点击存储桶右上角的编辑策略按钮来修改访问策略；</li>\n</ul>\n<p><img src=\"./../img/minio5.png\" alt=\"minio\"></p>\n<ul>\n<li>这里有三种访问策略可以选择，一种只读、一种只写、一种可读可写，这里我们选择只读即可，但是需要注意的是，访问前缀需要设置为*.*，否则会无法访问；</li>\n</ul>\n<p><img src=\"./../img/minio6.png\" alt=\"minio\"></p>\n<ul>\n<li>设置完成后，我们只需要通过拷贝链接中的前一串路径即可永久访问该文件；</li>\n</ul>\n<h2>MinIO客户端的使用</h2>\n<blockquote>\n<p>虽然MinIO的网页端管理已经很方便了，但是官网还是给我们提供了基于命令行的客户端MinIO Client(简称mc)，下面我们来讲讲它的使用方法。</p>\n</blockquote>\n<h3>常用命令</h3>\n<blockquote>\n<p>下面我们先来熟悉下mc的命令，这些命令和Linux中的命令有很多相似之处。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ls</td>\n<td>列出文件和文件夹</td>\n</tr>\n<tr>\n<td>mb</td>\n<td>创建一个存储桶或一个文件夹</td>\n</tr>\n<tr>\n<td>cat</td>\n<td>显示文件和对象内容</td>\n</tr>\n<tr>\n<td>pipe</td>\n<td>将一个STDIN重定向到一个对象或者文件或者STDOUT</td>\n</tr>\n<tr>\n<td>share</td>\n<td>生成用于共享的URL</td>\n</tr>\n<tr>\n<td>cp</td>\n<td>拷贝文件和对象</td>\n</tr>\n<tr>\n<td>mirror</td>\n<td>给存储桶和文件夹做镜像</td>\n</tr>\n<tr>\n<td>find</td>\n<td>基于参数查找文件</td>\n</tr>\n<tr>\n<td>diff</td>\n<td>对两个文件夹或者存储桶比较差异</td>\n</tr>\n<tr>\n<td>rm</td>\n<td>删除文件和对象</td>\n</tr>\n<tr>\n<td>events</td>\n<td>管理对象通知</td>\n</tr>\n<tr>\n<td>watch</td>\n<td>监听文件和对象的事件</td>\n</tr>\n<tr>\n<td>policy</td>\n<td>管理访问策略</td>\n</tr>\n<tr>\n<td>session</td>\n<td>为cp命令管理保存的会话</td>\n</tr>\n<tr>\n<td>config</td>\n<td>管理mc配置文件</td>\n</tr>\n<tr>\n<td>update</td>\n<td>检查软件更新</td>\n</tr>\n<tr>\n<td>version</td>\n<td>输出版本信息</td>\n</tr>\n</tbody>\n</table>\n<h3>安装及配置</h3>\n<blockquote>\n<p>由于MinIO服务端中并没有自带客户端，所以我们需要安装配置完客户端后才能使用，这里以Docker环境下的安装为例。</p>\n</blockquote>\n<ul>\n<li>下载MinIO Client 的Docker镜像：</li>\n</ul>\n<pre><code class=\"language-bash\">docker pull minio/mc\n</code></pre>\n<ul>\n<li>在Docker容器中运行mc：</li>\n</ul>\n<pre><code class=\"language-bash\">docker run -it --entrypoint=/bin/sh minio/mc\n</code></pre>\n<ul>\n<li>运行完成后我们需要进行配置，将我们自己的MinIO服务配置到客户端上去，配置的格式如下：</li>\n</ul>\n<pre><code class=\"language-bash\">mc config host add &lt;ALIAS&gt; &lt;YOUR-S3-ENDPOINT&gt; &lt;YOUR-ACCESS-KEY&gt; &lt;YOUR-SECRET-KEY&gt; &lt;API-SIGNATURE&gt;\n</code></pre>\n<ul>\n<li>对于我们的MinIO服务可以这样配置：</li>\n</ul>\n<pre><code class=\"language-bash\">mc config host add minio http://localhost:9000 minioadmin minioadmin S3v4\n</code></pre>\n<h3>常用操作</h3>\n<ul>\n<li>查看存储桶和查看存储桶中存在的文件：</li>\n</ul>\n<pre><code class=\"language-bash\"><span class=\"hljs-comment\"># 查看存储桶</span>\nmc ls minio\n<span class=\"hljs-comment\"># 查看存储桶中存在的文件</span>\nmc ls minio/blog\n</code></pre>\n<p><img src=\"./../img/minio7.png\" alt=\"minio\"></p>\n<ul>\n<li>创建一个名为<code>test</code>的存储桶：</li>\n</ul>\n<pre><code class=\"language-bash\">mc mb minio/<span class=\"hljs-built_in\">test</span>\n</code></pre>\n<ul>\n<li>共享<code>avatar.png</code>文件的下载路径：</li>\n</ul>\n<pre><code class=\"language-bash\">mc share download minio/blog/avatar.png\n</code></pre>\n<ul>\n<li>查找<code>blog</code>存储桶中的png文件：</li>\n</ul>\n<pre><code class=\"language-bash\">mc find minio/blog --name <span class=\"hljs-string\">\"*.png\"</span>\n</code></pre>\n<ul>\n<li>设置<code>test</code>存储桶的访问权限为<code>只读</code>：</li>\n</ul>\n<pre><code class=\"language-bash\"><span class=\"hljs-comment\"># 目前可以设置这四种权限：none, download, upload, public</span>\nmc policy <span class=\"hljs-built_in\">set</span> download minio/<span class=\"hljs-built_in\">test</span>/\n<span class=\"hljs-comment\"># 查看存储桶当前权限</span>\nmc policy list minio/<span class=\"hljs-built_in\">test</span>/\n</code></pre>\n<h2>参考资料</h2>\n<p>详细了解MinIO可以参考官方文档：<a href=\"https://docs.min.io/cn/minio-quickstart-guide.html\">https://docs.min.io/cn/minio-quickstart-guide.html</a></p>\n",
  "link": "\\zh-cn\\blog\\tool\\minio.html",
  "meta": {}
}