{
  "filename": "gitbook.md",
  "__html": "<h1>GitBook 使用教程</h1>\n<p>首先先献上 我的 <a href=\"https://burningmyself.github.io/blog/\" title=\"blog\">blog</a> 地址，可以在我的博客导航栏处找到，下面进行相关的介绍。</p>\n<h2>背景</h2>\n<p>由于之前都把零散的知识都写在博客园上，要查找的时候不是很系统化，所以打算挪到<a href=\"https://www.gitbook.com/?t=2\" title=\"GitBook\">GitBook</a> 上来统一管理，而且<a href=\"https://www.gitbook.com/?t=2\" title=\"GitBook\">GitBook</a> 写完编译后可以生成静态页面发布到博客上，逼格满满的样子。</p>\n<h2>GitBook 简介</h2>\n<ul>\n<li><a href=\"https://docs.gitbook.com/\" title=\"官网\">GitBook 官网</a></li>\n<li><a href=\"https://docs.gitbook.com/\" title=\"文档\">GitBook 文档</a></li>\n<li><a href=\"https://github.com/GitbookIO/gitbook\" title=\"GitHub\">GitBook GitHub</a></li>\n</ul>\n<h2>GitBook 准备工作</h2>\n<p>上面我推荐的是 Node.js + GitBook + Typora + Git，所以你还需要安装 Typora（一个很棒的支持 macOS、Windows、Linux 的 Markdown 编辑工具）和 Git 版本管理工具。戳下面：</p>\n<ul>\n<li><a href=\"https://nodejs.org/en/\">Node.js</a></li>\n<li><a href=\"https://typora.io/\">Typora</a></li>\n<li><a href=\"https://git-scm.com/\">Git</a></li>\n</ul>\n<h3>安装 Node.js</h3>\n<p>GitBook 是一个基于<a href=\"https://nodejs.org/en/\" title=\"Node.js\">Node.js</a> 的命令行工具，下载安装 Node.js，安装完成之后，你可以使用下面的命令来检验是否安装成功。</p>\n<pre><code class=\"language-node\">$ node -v\nv10.5.0\n</code></pre>\n<h3>安装 GitBook</h3>\n<p>输入下面的命令来安装 GitBook。</p>\n<pre><code class=\"language-node\">$ npm install gitbook-cli -g\n</code></pre>\n<p>安装完成之后，你可以使用下面的命令来检验是否安装成功</p>\n<pre><code class=\"language-node\">$ gitbook -V\nCLI version: 2.3.2\nInstalling GitBook 3.2.3\n</code></pre>\n<p>更多详情请参照<a href=\"https://docs.gitbook.com/\" title=\"文档\">GitBook 安装文档</a> 来安装 GitBook。</p>\n<h3>安装 Typora</h3>\n<p>Typora 的安装很简单，难点在于需要翻墙才能下载（当然你也可以找我要）。Git 的安装也很简单，但要用好它需要不少时间，这里就不展开了（再讲下去你就要跑啦）。</p>\n<h3>安装 GitBook 编辑器</h3>\n<p>去<a href=\"http://downloads.editor.gitbook.com/download/\" title=\"官网\">GitBook 官网</a> 下载 GitBook 编辑器；如果是 Mac 用户且安装过 brew cask 的话可以使用 brew cask install gitbook-editor 命令行来安装 GitBook 编辑器。</p>\n<h2>先睹为快</h2>\n<p>GitBook 准备工作做好之后，我们进入一个你要写书的目录，输入如下命令。</p>\n<pre><code class=\"language-node\">$ gitbook init\nwarn: no summary file in this book\ninfo: create README.md\ninfo: create SUMMARY.md\ninfo: initialization is finished\n</code></pre>\n<p>可以看到他会创建 <a href=\"http://README.md\">README.md</a> 和 <a href=\"http://SUMMARY.md\">SUMMARY.md</a> 这两个文件，<a href=\"http://README.md\">README.md</a> 应该不陌生，就是说明文档，而 <a href=\"http://SUMMARY.md\">SUMMARY.md</a> 其实就是书的章节目录，其默认内容如下所示：</p>\n<pre><code># Summary\n\n* [Introduction](README.md)\n</code></pre>\n<p>接下来，我们输入 $ gitbook serve 命令，然后在浏览器地址栏中输入 <a href=\"http://localhost:4000\">http://localhost:4000</a> 便可预览书籍。\n效果如下所示：\n<img src=\"./../img/gitbook1.png\" alt=\"效果图\" title=\"效果图\"></p>\n<p>运行该命令后会在书籍的文件夹中生成一个 _book 文件夹, 里面的内容即为生成的 html 文件，我们可以使用下面命令来生成网页而不开启服务器。</p>\n<pre><code>gitbook build\n</code></pre>\n<p>下面我们来详细介绍下 GitBook 目录结构及相关文件。</p>\n<h3>Typora 来编辑这两个文件</h3>\n<p><img src=\"./../img/gitbook4.png\" alt=\"效果图\" title=\"效果图\">\n编辑 <a href=\"http://SUMMARY.md\">SUMMARY.md</a> 文件，内容修改为：</p>\n<pre><code># 目录\n\n* [前言](README.md)\n* [第一章](Chapter1/README.md)\n  * [第1节：衣](Chapter1/衣.md)\n  * [第2节：食](Chapter1/食.md)\n  * [第3节：住](Chapter1/住.md)\n  * [第4节：行](Chapter1/行.md)\n* [第二章](Chapter2/README.md)\n* [第三章](Chapter3/README.md)\n* [第四章](Chapter4/README.md)\n\n</code></pre>\n<p>然后我们回到命令行，在 mybook 文件夹中再次执行 gitbook init 命令。GitBook 会查找 <a href=\"http://SUMMARY.md\">SUMMARY.md</a> 文件中描述的目录和文件，如果没有则会将其创建。</p>\n<p>Typora 是所见即所得（实时渲染）的 Markdown 编辑器，这时候它是这样的：</p>\n<p><img src=\"./../img/gitbook5.png\" alt=\"效果图\" title=\"效果图\"></p>\n<p>接着我们执行 gitbook serve 来预览这本书籍，执行命令后会对 Markdown 格式的文档进行转换，默认转换为 html 格式，最后提示 “Serving book on <a href=\"http://localhost:4000\">http://localhost:4000</a>”。嗯，打开浏览器看一下吧：</p>\n<p><img src=\"./../img/gitbook6.png\" alt=\"效果图\" title=\"效果图\"></p>\n<h3>gitbook 常用命令</h3>\n<p>当你写得差不多，你可以执行 gitbook build 命令构建书籍，默认将生成的静态网站输出到 _book 目录。实际上，这一步也包含在 gitbook serve 里面，因为它们是 HTML，所以 GitBook 通过 Node.js 给你提供服务了。</p>\n<ol>\n<li>当然，build 命令可以指定路径：</li>\n</ol>\n<pre><code>gitbook build [书籍路径] [输出路径]\n</code></pre>\n<ol start=\"2\">\n<li>serve 命令也可以指定端口：</li>\n</ol>\n<pre><code>gitbook serve --port 2333\n</code></pre>\n<ol start=\"3\">\n<li>你还可以生成 PDF 格式的电子书：</li>\n</ol>\n<pre><code>gitbook pdf ./ ./mybook.pdf\n</code></pre>\n<ol start=\"4\">\n<li>生成 epub 格式的电子书：</li>\n</ol>\n<pre><code>gitbook epub ./ ./mybook.epub\n</code></pre>\n<ol start=\"5\">\n<li>生成 mobi 格式的电子书：</li>\n</ol>\n<pre><code>gitbook mobi ./ ./mybook.mobi\n</code></pre>\n<p>基本命令</p>\n<pre><code>gitbook init //初始化目录文件\ngitbook help //列出gitbook所有的命令\ngitbook --help //输出gitbook-cli的帮助信息\ngitbook build //生成静态网页\ngitbook serve //生成静态网页并运行服务器\ngitbook build --gitbook=2.0.1 //生成时指定gitbook的版本, 本地没有会先下载\ngitbook ls //列出本地所有的gitbook版本\ngitbook ls-remote //列出远程可用的gitbook版本\ngitbook fetch 标签/版本号 //安装对应的gitbook版本\ngitbook update //更新到gitbook的最新版本\ngitbook uninstall 2.0.1 //卸载对应的gitbook版本\ngitbook build --log=debug //指定log的级别\ngitbook builid --debug //输出错误信息\n</code></pre>\n<p>如果生成不了，你可能还需要安装一些工具，比如 ebook-convert。或者在 Typora 中安装 Pandoc 进行导出。</p>\n<p>除此之外，别忘了还可以用 Git 做版本管理呀！在 mybook 目录下执行 git init 初始化仓库，执行 git remote add 添加远程仓库（你得先在远端建好）。接着就可以愉快地 commit，push，pull … 啦！</p>\n<p>下面我们主要来讲讲 book.json 和 <a href=\"http://SUMMARY.md\">SUMMARY.md</a> 文件。</p>\n<h3>book.json</h3>\n<p>该文件主要用来存放配置信息，我先放出我的配置文件。</p>\n<pre><code class=\"language-conf\">{\n    &quot;title&quot;: &quot;Blankj's Glory&quot;,\n    &quot;author&quot;: &quot;Blankj&quot;,\n    &quot;description&quot;: &quot;select * from learn&quot;,\n    &quot;language&quot;: &quot;zh-hans&quot;,\n    &quot;gitbook&quot;: &quot;3.2.3&quot;,\n    &quot;styles&quot;: {\n        &quot;website&quot;: &quot;./styles/website.css&quot;\n    },\n    &quot;structure&quot;: {\n        &quot;readme&quot;: &quot;README.md&quot;\n    },\n    &quot;links&quot;: {\n        &quot;sidebar&quot;: {\n            &quot;我的狗窝&quot;: &quot;https://blankj.com&quot;\n        }\n    },\n    &quot;plugins&quot;: [\n        &quot;-sharing&quot;,\n        &quot;splitter&quot;,\n        &quot;expandable-chapters-small&quot;,\n        &quot;anchors&quot;,\n\n        &quot;github&quot;,\n        &quot;github-buttons&quot;,\n        &quot;donate&quot;,\n        &quot;sharing-plus&quot;,\n        &quot;anchor-navigation-ex&quot;,\n        &quot;favicon&quot;\n    ],\n    &quot;pluginsConfig&quot;: {\n        &quot;github&quot;: {\n            &quot;url&quot;: &quot;https://github.com/Blankj&quot;\n        },\n        &quot;github-buttons&quot;: {\n            &quot;buttons&quot;: [{\n                &quot;user&quot;: &quot;Blankj&quot;,\n                &quot;repo&quot;: &quot;glory&quot;,\n                &quot;type&quot;: &quot;star&quot;,\n                &quot;size&quot;: &quot;small&quot;,\n                &quot;count&quot;: true\n                }\n            ]\n        },\n        &quot;donate&quot;: {\n            &quot;alipay&quot;: &quot;./source/images/donate.png&quot;,\n            &quot;title&quot;: &quot;&quot;,\n            &quot;button&quot;: &quot;赞赏&quot;,\n            &quot;alipayText&quot;: &quot; &quot;\n        },\n        &quot;sharing&quot;: {\n            &quot;douban&quot;: false,\n            &quot;facebook&quot;: false,\n            &quot;google&quot;: false,\n            &quot;hatenaBookmark&quot;: false,\n            &quot;instapaper&quot;: false,\n            &quot;line&quot;: false,\n            &quot;linkedin&quot;: false,\n            &quot;messenger&quot;: false,\n            &quot;pocket&quot;: false,\n            &quot;qq&quot;: false,\n            &quot;qzone&quot;: false,\n            &quot;stumbleupon&quot;: false,\n            &quot;twitter&quot;: false,\n            &quot;viber&quot;: false,\n            &quot;vk&quot;: false,\n            &quot;weibo&quot;: false,\n            &quot;whatsapp&quot;: false,\n            &quot;all&quot;: [\n                &quot;google&quot;, &quot;facebook&quot;, &quot;weibo&quot;, &quot;twitter&quot;,\n                &quot;qq&quot;, &quot;qzone&quot;, &quot;linkedin&quot;, &quot;pocket&quot;\n            ]\n        },\n        &quot;anchor-navigation-ex&quot;: {\n            &quot;showLevel&quot;: false\n        },\n        &quot;favicon&quot;:{\n            &quot;shortcut&quot;: &quot;./source/images/favicon.jpg&quot;,\n            &quot;bookmark&quot;: &quot;./source/images/favicon.jpg&quot;,\n            &quot;appleTouch&quot;: &quot;./source/images/apple-touch-icon.jpg&quot;,\n            &quot;appleTouchMore&quot;: {\n                &quot;120x120&quot;: &quot;./source/images/apple-touch-icon.jpg&quot;,\n                &quot;180x180&quot;: &quot;./source/images/apple-touch-icon.jpg&quot;\n            }\n        }\n    }\n}\n</code></pre>\n<p>相信很多节点自己也能猜到是什么意思，我还是简单介绍下吧。</p>\n<ul>\n<li>title:本书标题</li>\n<li>author:本书作者</li>\n<li>description:本书描述</li>\n<li>language:本书语言，中文设置 &quot;zh-hans&quot; 即可</li>\n<li>gitbook:指定使用的 GitBook 版本</li>\n<li>styles:自定义页面样式</li>\n<li>structure:指定 Readme、Summary、Glossary 和 Languages 对应的文件名</li>\n<li>links:在左侧导航栏添加链接信息</li>\n<li>plugins:配置使用的插件</li>\n<li>pluginsConfig:配置插件的属性</li>\n<li><a href=\"http://SUMMARY.md\">SUMMARY.md</a>:这个文件主要决定 GitBook 的章节目录，它通过 Markdown 中的列表语法来表示文件的父子关系，下面是一个简单的示例：</li>\n</ul>\n<pre><code># Summary\n\n* [Introduction](README.md)\n* [Part I](part1/README.md)\n    * [Writing is nice](part1/writing.md)\n    * [GitBook is nice](part1/gitbook.md)\n* [Part II](part2/README.md)\n    * [We love feedback](part2/feedback_please.md)\n    * [Better tools for authors](part2/better_tools.md)\n</code></pre>\n<p>这个配置对应的目录结构如下所示:\n<img src=\"./../img/gitbook2.png\" alt=\"如图\" title=\"如图\">\n我们通过使用 标题 或者 水平分割线 将 GitBook 分为几个不同的部分，如下所示</p>\n<pre><code># Summary\n\n### Part I\n\n* [Introduction](README.md)\n* [Writing is nice](part1/writing.md)\n* [GitBook is nice](part1/gitbook.md)\n\n### Part II\n\n* [We love feedback](part2/feedback_please.md)\n* [Better tools for authors](part2/better_tools.md)\n\n---\n\n* [Last part without title](part3/title.md)\n</code></pre>\n<p>这个配置对应的目录结构如下所示:\n<img src=\"./../img/gitbook3.png\" alt=\"如图\" title=\"如图\"></p>\n<h3>插件</h3>\n<p>GitBook 有 <a href=\"https://plugins.gitbook.com/\" title=\"插件官网\">插件官网</a>，默认带有 5 个插件，highlight、search、sharing、font-settings、livereload，如果要去除自带的插件， 可以在插件名称前面加 -，比如：</p>\n<pre><code>&quot;plugins&quot;: [\n    &quot;-search&quot;\n]\n</code></pre>\n<p>如果要配置使用的插件可以在 book.json 文件中加入即可，比如我们添加 <a href=\"https://plugins.gitbook.com/plugin/github\">plugin-github</a>，我们在 book.json 中加入配置如下即可：</p>\n<pre><code>{\n    &quot;plugins&quot;: [ &quot;github&quot; ],\n    &quot;pluginsConfig&quot;: {\n        &quot;github&quot;: {\n            &quot;url&quot;: &quot;https://github.com/your/repo&quot;\n        }\n    }\n}\n</code></pre>\n<p>然后在终端输入 gitbook install ./ 即可。</p>\n<h3>总结</h3>\n<ol>\n<li>\n<p>主要流程\n安装node.js &gt; 安装Gitbook &gt; 安装Gitbook编辑器 &gt; 安装calibre &gt; 导出PDF</p>\n</li>\n<li>\n<p>安装 GitBook</p>\n</li>\n</ol>\n<pre><code>npm install -g gitbook\nnpm install -g gitbook-cli\ngitbook -V # 查看版本\n</code></pre>\n<ol start=\"3\">\n<li>终端生成HTML</li>\n</ol>\n<p><a href=\"https://www.gitbook.com/editor\">客户端编辑器下载：</a></p>\n<pre><code>cd /Users/sunshine/GitBook/Library/Import/test/\ngitbook build\ngitbook serve # 本地预览 _book\n</code></pre>\n<ol start=\"4\">\n<li>使用calibre插件生成PDF</li>\n</ol>\n<p><a href=\"https://calibre-ebook.com/download\">插件下载：</a></p>\n<pre><code>ln -s /Applications/calibre.app/Contents/MacOS/ebook-convert /usr/local/bin\ngitbook pdf . mypdf.pdf```\n</code></pre>\n<p>如果要指定插件的版本可以使用 plugin@0.3.1，因为一些插件可能不会随着 GitBook 版本的升级而升级。</p>\n<h3>结语</h3>\n<p>这是我对 GitBook 使用的总结，希望能帮到今后需要的小伙伴</p>\n<p><a href=\"https://blog.csdn.net/axi295309066/article/details/61420694/\">相关资料</a></p>\n",
  "link": "\\en-us\\blog\\tool\\gitbook.html",
  "meta": {}
}