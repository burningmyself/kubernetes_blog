{
  "filename": "node.js.md",
  "__html": "<h2>Node 介绍</h2>\n<ul>\n<li>\n<p>Node 中的 JavaScript</p>\n<ul>\n<li>EcmaScript\n<ul>\n<li>变量</li>\n<li>方法</li>\n<li>数据类型</li>\n<li>内置对象</li>\n<li>Array</li>\n<li>Object</li>\n<li>Date</li>\n<li>Math</li>\n</ul>\n</li>\n<li>模块系统\n<ul>\n<li>在 Node 中没有全局作用域的概念</li>\n<li>在 Node 中，只能通过 require 方法来加载执行多个 JavaScript 脚本文件</li>\n<li>require 加载只能是执行其中的代码，文件与文件之间由于是模块作用域，所以不会有污染的问题\n<ul>\n<li>模块完全是封闭的</li>\n<li>外部无法访问内部</li>\n<li>内部也无法访问外部</li>\n</ul>\n</li>\n<li>模块作用域固然带来了一些好处，可以加载执行多个文件，可以完全避免变量命名冲突污染的问题</li>\n<li>但是某些情况下，模块与模块是需要进行通信的</li>\n<li>在每个模块中，都提供了一个对象：<code>exports</code></li>\n<li>该对象默认是一个空对象</li>\n<li>你要做的就是把需要被外部访问使用的成员手动的挂载到 <code>exports</code> 接口对象中</li>\n<li>然后谁来 <code>require</code> 这个模块，谁就可以得到模块内部的 <code>exports</code> 接口对象</li>\n<li>还有其它的一些规则，具体后面讲，以及如何在项目中去使用这种编程方式，会通过后面的案例来处理</li>\n</ul>\n</li>\n<li>核心模块\n<ul>\n<li>核心模块是由 Node 提供的一个个的具名的模块，它们都有自己特殊的名称标识，例如\n<ul>\n<li>fs 文件操作模块</li>\n<li>http 网络服务构建模块</li>\n<li>os 操作系统信息模块</li>\n<li>path 路径处理模块</li>\n<li>。。。。</li>\n</ul>\n</li>\n<li>所有核心模块在使用的时候都必须手动的先使用 <code>require</code> 方法来加载，然后才可以使用，例如：\n<ul>\n<li><code>var fs = require('fs')</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>http</p>\n<ul>\n<li>require</li>\n<li>端口号\n<ul>\n<li>ip 地址定位计算机</li>\n<li>端口号定位具体的应用程序</li>\n</ul>\n</li>\n<li>Content-Type\n<ul>\n<li>服务器最好把每次响应的数据是什么内容类型都告诉客户端，而且要正确的告诉</li>\n<li>不同的资源对应的 Content-Type 是不一样，具体参照：<a href=\"http://tool.oschina.net/commons\">http://tool.oschina.net/commons</a></li>\n<li>对于文本类型的数据，最好都加上编码，目的是为了防止中文解析乱码问题</li>\n</ul>\n</li>\n<li>通过网络发送文件\n<ul>\n<li>发送的并不是文件，本质上来讲发送是文件的内容</li>\n<li>当浏览器收到服务器响应内容之后，就会根据你的 Content-Type 进行对应的解析处理</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>模块系统</p>\n</li>\n<li>\n<p>Node 中的其它的核心模块</p>\n</li>\n<li>\n<p>做一个小管理系统：</p>\n<ul>\n<li>CRUD</li>\n</ul>\n</li>\n<li>\n<p>Express Web 开发框架</p>\n<ul>\n<li><code>npm install express</code></li>\n</ul>\n</li>\n</ul>\n<h2>文档</h2>\n<ul>\n<li><a href=\"https://nodejs.org/en/docs/\">官方文档</a></li>\n<li><a href=\"http://www.runoob.com/nodejs/nodejs-tutorial.html\">菜鸟文档</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434501245426ad4b91f2b880464ba876a8e3043fc8ef000\">廖雪峰文档</a></li>\n</ul>\n",
  "link": "\\en-us\\blog\\web\\node.js.html",
  "meta": {}
}